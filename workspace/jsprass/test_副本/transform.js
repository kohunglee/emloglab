"use strict";function TreeTransformer(n,r){TreeWalker.call(this),this.before=n,this.after=r}TreeTransformer.prototype=new TreeWalker,function(n){function o(n,r){return List(n,function(n){return n.transform(r,!0)})}function r(n,r){n.argnames=o(n.argnames,r),n.rest&&(n.rest=n.rest.transform(r)),n.value?n.value=n.value.transform(r):n.body=o(n.body,r)}n(AST_Node,noop),n(AST_LabeledStatement,function(n,r){n.label=n.label.transform(r),n.body=n.body.transform(r)}),n(AST_SimpleStatement,function(n,r){n.body=n.body.transform(r)}),n(AST_Block,function(n,r){n.body=o(n.body,r)}),n(AST_Do,function(n,r){n.body=n.body.transform(r),n.condition=n.condition.transform(r)}),n(AST_While,function(n,r){n.condition=n.condition.transform(r),n.body=n.body.transform(r)}),n(AST_For,function(n,r){n.init&&(n.init=n.init.transform(r)),n.condition&&(n.condition=n.condition.transform(r)),n.step&&(n.step=n.step.transform(r)),n.body=n.body.transform(r)}),n(AST_ForEnumeration,function(n,r){n.init=n.init.transform(r),n.object=n.object.transform(r),n.body=n.body.transform(r)}),n(AST_With,function(n,r){n.expression=n.expression.transform(r),n.body=n.body.transform(r)}),n(AST_Exit,function(n,r){n.value&&(n.value=n.value.transform(r))}),n(AST_LoopControl,function(n,r){n.label&&(n.label=n.label.transform(r))}),n(AST_If,function(n,r){n.condition=n.condition.transform(r),n.body=n.body.transform(r),n.alternative&&(n.alternative=n.alternative.transform(r))}),n(AST_Switch,function(n,r){n.expression=n.expression.transform(r),n.body=o(n.body,r)}),n(AST_Case,function(n,r){n.expression=n.expression.transform(r),n.body=o(n.body,r)}),n(AST_Try,function(n,r){n.body=o(n.body,r),n.bcatch&&(n.bcatch=n.bcatch.transform(r)),n.bfinally&&(n.bfinally=n.bfinally.transform(r))}),n(AST_Catch,function(n,r){n.argname&&(n.argname=n.argname.transform(r)),n.body=o(n.body,r)}),n(AST_Definitions,function(n,r){n.definitions=o(n.definitions,r)}),n(AST_VarDef,function(n,r){n.name=n.name.transform(r),n.value&&(n.value=n.value.transform(r))}),n(AST_DefaultValue,function(n,r){n.name=n.name.transform(r),n.value=n.value.transform(r)}),n(AST_Lambda,function(n,r){n.name&&(n.name=n.name.transform(r)),n.argnames=o(n.argnames,r),n.rest&&(n.rest=n.rest.transform(r)),n.body=o(n.body,r)}),n(AST_Arrow,r),n(AST_AsyncArrow,r),n(AST_Class,function(n,r){n.name&&(n.name=n.name.transform(r)),n.extends&&(n.extends=n.extends.transform(r)),n.properties=o(n.properties,r)}),n(AST_ClassProperty,function(n,r){n.key instanceof AST_Node&&(n.key=n.key.transform(r)),n.value&&(n.value=n.value.transform(r))}),n(AST_Call,function(n,r){n.expression=n.expression.transform(r),n.args=o(n.args,r)}),n(AST_Sequence,function(n,r){n.expressions=o(n.expressions,r)}),n(AST_Await,function(n,r){n.expression=n.expression.transform(r)}),n(AST_Yield,function(n,r){n.expression&&(n.expression=n.expression.transform(r))}),n(AST_Dot,function(n,r){n.expression=n.expression.transform(r)}),n(AST_Sub,function(n,r){n.expression=n.expression.transform(r),n.property=n.property.transform(r)}),n(AST_Spread,function(n,r){n.expression=n.expression.transform(r)}),n(AST_Unary,function(n,r){n.expression=n.expression.transform(r)}),n(AST_Binary,function(n,r){n.left=n.left.transform(r),n.right=n.right.transform(r)}),n(AST_Conditional,function(n,r){n.condition=n.condition.transform(r),n.consequent=n.consequent.transform(r),n.alternative=n.alternative.transform(r)}),n(AST_Array,function(n,r){n.elements=o(n.elements,r)}),n(AST_DestructuredArray,function(n,r){n.elements=o(n.elements,r),n.rest&&(n.rest=n.rest.transform(r))}),n(AST_DestructuredKeyVal,function(n,r){n.key instanceof AST_Node&&(n.key=n.key.transform(r)),n.value=n.value.transform(r)}),n(AST_DestructuredObject,function(n,r){n.properties=o(n.properties,r),n.rest&&(n.rest=n.rest.transform(r))}),n(AST_Object,function(n,r){n.properties=o(n.properties,r)}),n(AST_ObjectProperty,function(n,r){n.key instanceof AST_Node&&(n.key=n.key.transform(r)),n.value=n.value.transform(r)}),n(AST_ExportDeclaration,function(n,r){n.body=n.body.transform(r)}),n(AST_ExportDefault,function(n,r){n.body=n.body.transform(r)}),n(AST_ExportReferences,function(n,r){n.properties=o(n.properties,r)}),n(AST_Import,function(n,r){n.all&&(n.all=n.all.transform(r)),n.default&&(n.default=n.default.transform(r)),n.properties&&(n.properties=o(n.properties,r))}),n(AST_Template,function(n,r){n.tag&&(n.tag=n.tag.transform(r)),n.expressions=o(n.expressions,r)})}(function(n,e){n.DEFMETHOD("transform",function(n,r){var o;return n.push(this),void 0===(o=n.before?n.before(this,e,r):o)&&(e(o=this,n),n.after)&&void 0!==(r=n.after(o,r))&&(o=r),n.pop(),o})});